/* Autogenerated file. Do not edit manually. */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from 'ethers';
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from '@ethersproject/contracts';
import { BytesLike } from '@ethersproject/bytes';
import { Listener, Provider } from '@ethersproject/providers';
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi';

interface IAaveIncentivesControllerInterface extends ethers.utils.Interface {
  functions: {
    'DISTRIBUTION_END()': FunctionFragment;
    'claimRewards(address[],uint256,address)': FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: 'DISTRIBUTION_END',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'claimRewards',
    values: [string[], BigNumberish, string],
  ): string;

  decodeFunctionResult(
    functionFragment: 'DISTRIBUTION_END',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'claimRewards',
    data: BytesLike,
  ): Result;

  events: {};
}

export class IAaveIncentivesController extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IAaveIncentivesControllerInterface;

  functions: {
    DISTRIBUTION_END(overrides?: CallOverrides): Promise<[BigNumber]>;

    'DISTRIBUTION_END()'(overrides?: CallOverrides): Promise<[BigNumber]>;

    claimRewards(
      assets: string[],
      amount: BigNumberish,
      to: string,
      overrides?: Overrides,
    ): Promise<ContractTransaction>;

    'claimRewards(address[],uint256,address)'(
      assets: string[],
      amount: BigNumberish,
      to: string,
      overrides?: Overrides,
    ): Promise<ContractTransaction>;
  };

  DISTRIBUTION_END(overrides?: CallOverrides): Promise<BigNumber>;

  'DISTRIBUTION_END()'(overrides?: CallOverrides): Promise<BigNumber>;

  claimRewards(
    assets: string[],
    amount: BigNumberish,
    to: string,
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  'claimRewards(address[],uint256,address)'(
    assets: string[],
    amount: BigNumberish,
    to: string,
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  callStatic: {
    DISTRIBUTION_END(overrides?: CallOverrides): Promise<BigNumber>;

    'DISTRIBUTION_END()'(overrides?: CallOverrides): Promise<BigNumber>;

    claimRewards(
      assets: string[],
      amount: BigNumberish,
      to: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'claimRewards(address[],uint256,address)'(
      assets: string[],
      amount: BigNumberish,
      to: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    DISTRIBUTION_END(overrides?: CallOverrides): Promise<BigNumber>;

    'DISTRIBUTION_END()'(overrides?: CallOverrides): Promise<BigNumber>;

    claimRewards(
      assets: string[],
      amount: BigNumberish,
      to: string,
      overrides?: Overrides,
    ): Promise<BigNumber>;

    'claimRewards(address[],uint256,address)'(
      assets: string[],
      amount: BigNumberish,
      to: string,
      overrides?: Overrides,
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    DISTRIBUTION_END(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'DISTRIBUTION_END()'(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    claimRewards(
      assets: string[],
      amount: BigNumberish,
      to: string,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;

    'claimRewards(address[],uint256,address)'(
      assets: string[],
      amount: BigNumberish,
      to: string,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;
  };
}
